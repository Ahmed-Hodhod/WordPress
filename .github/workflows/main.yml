name: Deploy Application

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      
    - name: Create archive
      run: |
        git archive --format=tar.gz -o app_$(date +"%Y-%m-%d").tar.gz HEAD
        
    - name: Upload to S3
      run: |
        echo "Uploading to S3"
        aws s3 cp app_$(date +"%Y-%m-%d").tar.gz s3://${{ secrets.S3_BUCKET_NAME }}/
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: ${{ secrets.AWS_REGION }} 
    
    - name: Set expiry policy on S3 bucket
      run: |
        aws s3api put-bucket-lifecycle-configuration --bucket ${{ secrets.S3_BUCKET_NAME }} --lifecycle-configuration '{"Rules":[{"ID":"ExpireOldBuilds","Prefix":"","Status":"Enabled","Expiration":{"Days":7}}]}'
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: ${{ secrets.AWS_REGION }} 


  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Deploy to Auto Scaling Group

      run: |
        export instance_ids=$(aws autoscaling describe-auto-scaling-groups --auto-scaling-group-name hodhod --query 'AutoScalingGroups[].Instances[].InstanceId' --output text)
        echo ${{ secrets.PEM_FILE }} > key.pem && chmod 600 key.pem
        
        for instance_id in $instance_ids; do
          public_ip=$(aws ec2 describe-instances --instance-ids $instance_id --query 'Reservations[].Instances[].PublicIpAddress' --output text)

          ssh -o StrictHostKeyChecking=no -i key.pem ec2-user@$public_ip "
            cd /home/ec2-user
            aws s3 cp s3://hodhod-app/app_$(date +"%Y-%m-%d").tar.gz  ./test
            "
        done
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: ${{ secrets.AWS_REGION }} 

