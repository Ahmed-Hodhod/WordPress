name: Deploy Application

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      
    - name: Create archive
      run: |
        git archive --format=tar.gz -o app_$(date +"%Y-%m-%d").tar.gz HEAD
        
    - name: Upload to S3
      run: |
        echo "Uploading to S3"
        aws s3 cp app_$(date +"%Y-%m-%d").tar.gz s3://${{ secrets.S3_BUCKET_NAME }}/
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: ${{ secrets.AWS_REGION }} 
    
    - name: Set expiry policy on S3 bucket
      run: |
        aws s3api put-bucket-lifecycle-configuration --bucket ${{ secrets.S3_BUCKET_NAME }} --lifecycle-configuration '{"Rules":[{"ID":"ExpireOldBuilds","Prefix":"","Status":"Enabled","Expiration":{"Days":7}}]}'
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: ${{ secrets.AWS_REGION }} 


  deploy-to-ASG:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      
    - name: Deploy to ASG
      run: |
        echo "Push to the ASG instances"
        #export instance_ids=$(aws autoscaling describe-auto-scaling-groups --auto-scaling-group-name hodhod --query 'AutoScalingGroups[].Instances[].InstanceId' --output text)
        #echo ${{ secrets.PEM_FILE }} > key.pem && chmod 600 key.pem
      
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: ${{ secrets.AWS_REGION }} 
  





